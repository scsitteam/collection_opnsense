---

- name: Testing LAGG interfaces
  hosts: localhost
  gather_facts: no
  module_defaults:
    group/ansibleguy.opnsense.all:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.list:
      target: 'interface_lagg'

  tasks:
    - name: Listing
      ansibleguy.opnsense.list:
      register: opn_pre1
      failed_when: >
        'data' not in opn_pre1 or
        opn_pre1.data | length != 0

    - name: Removing - does not exist
      ansibleguy.opnsense.interface_lagg:
        members:
          - ansibletest11
        state: 'absent'
      register: opn_pre2
      failed_when: >
        opn_pre2.failed or
        opn_pre2.changed

    - name: Adding 1 - failing because of invalid interface (server-side)
      ansibleguy.opnsense.interface_lagg:
        members:
          - lan
      register: opn_fail1
      failed_when: not opn_fail1.failed
      when: not ansible_check_mode

    - name: Adding 1
      ansibleguy.opnsense.interface_lagg:
        description: 'ANSIBLE_TEST_1_1'
        members:
          - 'vtnet0'
      register: opn1
      failed_when: >
        opn1.failed or
        not opn1.changed

    - name: Adding 1 - nothing changed
      ansibleguy.opnsense.interface_vlan:
        description: 'ANSIBLE_TEST_1_1'
        members:
          - 'vtnet0'
      register: opn2
      failed_when: >
        opn2.failed or
        opn2.changed
      when: not ansible_check_mode

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn3
      failed_when: >
        'data' not in opn3 or
        opn3.data | length != 1
      when: not ansible_check_mode

    - name: Removing 2
      ansibleguy.opnsense.interface_lagg:
        members:
          - 'vtnet0'
        state: 'absent'
      register: opn4
      failed_when: >
        opn4.failed or
        not opn4.changed
      when: not ansible_check_mode

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn_clean1
      failed_when: >
        'data' not in opn_clean1 or
        opn_clean1.data | length != 0
      when: not ansible_check_mode
